#!/usr/bin/perl -T -CSDAL

use warnings;
use strict;
use Getopt::Long;
use Path::Tiny;
use POSIX qw(setsid);
use Sys::Syslog;

undef %ENV;

my $dir_state = "/var/cache/iserv";
my $fn_state = "$dir_state/ipv6.state";
my $last_state = "";
my $prog = "ipv6chdetectd";
my $dir_run = "/run/$prog";
my $fn_pid = "$dir_run/pid";

my ($daemon, $help);
GetOptions("daemon" => \$daemon, "help" => \$help) or $help = 1;

print <<USAGE and exit if @ARGV != 0 || $help;
Usage: $prog [options]
Options
 -d, --daemon           run as daemon
 -h, --help             show this help
USAGE

die "must run as root" if $<;

sub logger($)
{
  my ($msg) = @_;
  print "$msg\n";
  syslog "info", $msg or warn $!;
}

sub get_current_ipv6_state
{
  qx(/usr/sbin/netquery6 'nic\tip');
}

if ($daemon)
{
  chdir "/" or die "chdir: $!\n";
  defined(my $pid = fork) or die "fork: $!\n";
  if ($pid)
  {
    open my $fp, ">", $fn_pid or die "write pid: $!\n";
    print $fp "$pid\n";
    close $fp;
    exit;
  }
  setsid or die $!;

  open STDIN, "/dev/null" or die "redirect stdin: $!\n";
  open STDOUT, ">/dev/null" or die "redirect stdout: $!\n";
  open STDERR, ">/dev/null" or die "redirect stderr: $!\n";
}

$SIG{TERM} = sub {
  logger "got SIGTERM";
  exit;
};
$SIG{INT} = sub {
  logger "got SIGINT";
  exit;
};

while (1)
{
  my $current_state = get_current_ipv6_state;

  if ($current_state eq "")
  {
    logger "Sleeping for 30 seconds as no IPv6 addresses (may system boot).";
    sleep 30;
    next;
  }

  my $last_state = path($fn_state)->slurp_utf8 if -f $fn_state;

  if ($last_state ne $current_state)
  {
    local $ENV{PATH} = "/usr/sbin:/usr/bin:/sbin:/bin";
    my $rerun = 0;

    system "systemctl", "reset-failed", "wide-dhcpv6-on-ipv6-change.service";
    logger "Detected ipv6 address change. Reloading wide-dhcpv6-client if running.";
    system "systemd-run", "--unit=wide-dhcpv6-on-ipv6-change.service",
        "--setenv=PATH=/usr/sbin:/usr/bin:/sbin:/bin",
        "/bin/sh", "-c", "/bin/systemctl is-active wide-dhcpv6-client.service && ".
        "/bin/systemctl reload wide-dhcpv6-client.service || true"
        and do {
          logger "Could not reload wide wide-dhcpv6-client: $!";
          $rerun = 1;
        };
    # wait for wide dhcp client
    sleep 30;

    system "systemctl", "reset-failed", "iservchk-on-ipv6-change.service";
    logger "Detected ipv6 address change. Invoking 'iservchk -a'.";
    system "systemd-run", "--unit=iservchk-on-ipv6-change.service",
	"--setenv=PATH=/usr/sbin:/usr/bin:/sbin:/bin",
        "/bin/sh", "-c", "/usr/sbin/iservchk -a || true"
        and do {
          logger "Could not invoke iservchk: $!";
          $rerun= 1;
        };

    if (-x "/usr/lib/iserv/newhosts")
    {
      system "systemctl", "reset-failed", "newhosts-on-ipv6-change.service";
      logger "Detected ipv6 address change. Invoking '/usr/lib/iserv/newhosts'.";
      system "systemd-run", "--unit=newhosts-on-ipv6-change.service",
	  "--setenv=PATH=/usr/sbin:/usr/bin:/sbin:/bin",
          "/bin/sh", "-c", "/usr/lib/iserv/newhosts || true"
          and do {
            logger "Could not invoke newhosts: $!";
            $rerun= 1;
          };
    }

    do { logger "Scheduled rerun during failures."; next } if $rerun;

    logger "Updating last known state.";
    path($fn_state)->spew_utf8($current_state);
  }
  else
  {
    logger "No changes detected.";
  }
 
  logger "Sleeping for 30 seconds.";
  sleep 30;
}
